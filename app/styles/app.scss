@import 'normalize';

$font-family: Helvetica, Arial, sans-serif;
$color: #FAF2EE;
$background: #FAF4F1;
$sectionheader: #F9E7E4;
$sectionbutton: #F2D1CB;
$bordercolor: #AA412F;

* { box-sizing: border-box; }

body { background-color: $background; }

html, body { height: 100%; overflow: hidden; }

/* Card positioning. */
.card { position: relative; }
.card .side { position: absolute; width: 100%; }

/* Two types of cards, div cards are big, button cards are the control to the big cards. */
.card div.side { height: 100%; }
.card div.back { background: $sectionbutton; }
.card button { overflow: hidden; }

/* Transitions */
.card {
  -webkit-transform-style: preserve-3d;
  -webkit-transition: -webkit-transform 0.2s;

  transform-style: preserve-3d;
  transition: transform 0.2s;
}

.card .side {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

.card .back {
  -webkit-transform: matrix3d(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1);
  transform: matrix3d(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1);
}
.flipped .card {
  -webkit-transform: matrix3d(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1);
  transform: matrix3d(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1);
}

/* This is the mostly decorative header. */
header.main { height: 40px; padding: 0 13px; background: #e1563f url('../img/navigation_background_x2.png') center top repeat-x; background-size: 320px 40px; border-bottom: 1px solid #aa412f; box-shadow: rgba(0,0,0,0.3) 0 0 2px; }
header.main {
  h1 { float: left; margin: 0; font-size: 26px; line-height: 40px; font-family: $font-family; font-weight: normal; color: $color; text-shadow: rgba(0,0,0,0.3) 0px 1px 0px; }

  .buttons { float: right; }
  button { display: inline-block; height: 26px; line-height: 26px; margin: 7px 0; padding: 0 .5em; background-color: rgba(0,0,0,.17); border: 1px solid #a93926; border-radius: 4px; box-shadow: inset rgba(255,255,255,0.17) 0 1px 1px; font-family: $font-family; font-size: 13px; color: $color; text-shadow: rgba(0,0,0,0.3) 0px 1px 0px; }
  button:hover { background-color: rgba(0,0,0,.3); }
  button + button { margin-left: 6.5px; }
}

/* Each pane */
section { min-height: 20px; }

/* Each pane also gets a header. */
section > header { min-height: 20px; height: 20px; max-height: 20px; padding: 0 0 0 6.5px; background-color: $sectionheader; }
section > header {
  & > * { height: 20px; }
  h1 { float: left; margin: 0; font-size: 10px; line-height: 20px; text-transform: uppercase; }
  button { margin: 0; padding: 0; border: none; font-size: 10px; line-height: 20px; background-color: $sectionbutton; box-shadow: inset rgba(0,0,0,0.17) 0 1px 1px; }

  .card { float: right; width: 40px; }
}

/* Flexbox layout. */
.application {
  display: -webkit-flex;
  -webkit-flex-direction: column;

  display: flex;
  flex-direction: column;
}
.application { height: 100%; }
header.main { min-height: 40px; max-height: 40px; }

main {
  display: -webkit-flex;
  -webkit-flex-direction: row;

  display: flex;
  flex-direction: row;
}
main { height: 100%; }
main > .state { width: 20%; min-width: 100px; }
main > .router { width: 20%; min-width: 100px; }
main > .workspace { width: 60%; min-width: 160px; }

/* Workaround for libsass bug. */
@mixin webkitcalc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
}

/* The state, router, and workspace sections are also flexboxes. */
.state, .router, .workspace {
  display: -webkit-flex;
  -webkit-flex-direction: column;

  display: flex;
  flex-direction: column;
}
.state, .router, .workspace { height: 100%; @include webkitcalc(height, "100% - 40px"); }

/* Crazy! the workspace is *also* a flexbox. */
.workspace .stepper { height: 10%; }
.workspace .canvas { height: 60%; }
.workspace .details { height: 30%; }

/* If the section is a card, set its height. */
.state > .card,
.router > .card { height: 100%; }

.state > .card,
.router > .card {
  textarea { width: 100%; height: 100%; display: block; }
}

.router .node { float: left; height: 20px; font-size: 10px; line-height: 20px;  border: 1px solid black; border-radius: 20px; text-align: center; }

/* Blocks to serve as resize handles. */
.resize { z-index: 100; }
main > .resize { position: absolute; width: 8px; margin: 0 -4px; height: calc(100% - 40px); cursor: ew-resize; }

/* Fake border that doesn't take up horizontal space. */
main > .resize {
  background: {
    image: linear-gradient(to bottom, $bordercolor 50%, $bordercolor 50%);
    size: 1px 7px;
    position: center top;
    repeat: repeat-y;
  }
}
main > .resize:hover, main > .resize.active {
  background-image: linear-gradient(to bottom, $bordercolor 50%, transparent 50%);
}

.workspace > .resize { position: static; height: 8px; margin: -4px 0; cursor: ns-resize; }

/* Fake border that doesn't take up horizontal space. */
.workspace > .resize {
  background: {
    image: linear-gradient(to right, $bordercolor 50%, $bordercolor 50%);
    size: 7px 1px;
    position: center center;
    repeat: repeat-x;
  }
}
.workspace > .resize:hover, .workspace > .resize.active {
  background-image: linear-gradient(to right, $bordercolor 50%, transparent 50%);
}

.resizing.column * { cursor: ew-resize; }
.resizing.row * { cursor: ns-resize; }

@import 'components/code-editor/code-editor';
