/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

/* Workaround for libsass bug. */
* {
  box-sizing: border-box; }

body {
  background-color: #FAF4F1; }

html, body {
  height: 100%;
  overflow: hidden; }

/* Card positioning. */

.card .side {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%; }

.card .back {
  background-color: #F2D1CB; }

/* Two types of cards, div cards are big, button cards are the control to the big cards. */
.card div.side {
  overflow: auto; }

.card button.side {
  overflow: hidden; }

/* Transitions */
.card {
  -webkit-transform-style: preserve-3d;
  -webkit-transition: -webkit-transform 0.2s;
  transform-style: preserve-3d;
  transition: transform 0.2s; }

.card .side {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.card .back {
  -webkit-transform: matrix3d(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1);
  transform: matrix3d(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1); }

.flipped .card {
  -webkit-transform: matrix3d(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1);
  transform: matrix3d(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1); }

/* This is the mostly decorative header. */
header.main {
  height: 40px;
  padding: 0 13px;
  background: #e1563f url('../img/navigation_background_x2.png') center top repeat-x;
  background-size: 320px 40px;
  border-bottom: 1px solid #aa412f;
  box-shadow: rgba(0, 0, 0, 0.3) 0 0 2px; }

header.main h1 {
  float: left;
  margin: 0;
  font-size: 26px;
  line-height: 40px;
  font-family: Helvetica, Arial, sans-serif;
  font-weight: normal;
  color: #FAF2EE;
  text-shadow: rgba(0, 0, 0, 0.3) 0px 1px 0px; }
header.main .buttons {
  float: right; }
header.main button {
  display: inline-block;
  height: 26px;
  line-height: 26px;
  margin: 7px 0;
  padding: 0 0.5em;
  background-color: rgba(0, 0, 0, 0.17);
  border: 1px solid #a93926;
  border-radius: 4px;
  box-shadow: inset rgba(255, 255, 255, 0.17) 0 1px 1px;
  font-family: Helvetica, Arial, sans-serif;
  font-size: 13px;
  color: #FAF2EE;
  text-shadow: rgba(0, 0, 0, 0.3) 0px 1px 0px; }
header.main button:hover {
  background-color: rgba(0, 0, 0, 0.3); }
header.main button + button {
  margin-left: 6.5px; }

/* Each pane */
section {
  position: relative;
  min-height: 20px; }

/* Each pane also gets a header. */
section > header {
  min-height: 20px;
  height: 20px;
  max-height: 20px;
  padding: 0 0 0 6.5px;
  background-color: #F9E7E4; }

section > header > * {
  height: 20px; }
section > header h1 {
  float: left;
  margin: 0;
  font-size: 10px;
  line-height: 20px;
  text-transform: uppercase; }
section > header button {
  margin: 0;
  padding: 0;
  border: none;
  font-size: 10px;
  line-height: 20px;
  background-color: #F2D1CB;
  box-shadow: inset rgba(0, 0, 0, 0.17) 0 1px 1px; }
section > header .card {
  float: right;
  width: 40px; }

section {
  /* Workaround for Firefox layout bug. box-sizing doesn't play nicely. Works in Firefox 30. */ }
  section .body {
    position: absolute;
    top: 20px;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: auto;
    padding: 6.5px; }
  section .body.card {
    overflow: visible;
    padding: 0; }
  section .body.card .side {
    padding: 6.5px;
    height: calc(100% - 20px); }
  section .body.card .side {
    width: -moz-calc(100% - 13px);
    height: -moz-calc(100% - 33px); }

/* Flexbox layout. */
.application {
  display: -webkit-flex;
  -webkit-flex-direction: column;
  display: flex;
  flex-direction: column; }

.application {
  height: 100%; }

header.main {
  min-height: 40px;
  max-height: 40px; }

main {
  display: -webkit-flex;
  -webkit-flex-direction: row;
  display: flex;
  flex-direction: row; }

main {
  height: 100%; }

main > .state {
  width: 20%;
  min-width: 100px; }

main > .router {
  width: 20%;
  min-width: 100px; }

main > .workspace {
  width: 60%;
  min-width: 160px; }

/* The state, router, and workspace sections are also flexboxes. */
.state, .router, .workspace {
  display: -webkit-flex;
  -webkit-flex-direction: column;
  display: flex;
  flex-direction: column; }

.state, .router, .workspace {
  height: 100%;
  height: -webkit-calc(100% - 40px); }

/* Crazy! the workspace is *also* a flexbox. */
.workspace .stepper {
  height: 10%; }

.workspace .canvas {
  height: 60%; }

.workspace .details {
  height: 30%; }

/* If the section is a card, set its height. */
.state > .card, .router > .card {
  height: 100%; }

.state > .card textarea, .router > .card textarea {
  width: 100%;
  height: 100%;
  display: block; }

.router .node {
  float: left;
  clear: left;
  height: 30px;
  padding: 5px;
  font-size: 10px;
  line-height: 20px;
  border: 1px solid black;
  border-radius: 20px;
  text-align: center; }

/* Blocks to serve as resize handles. */
.resize {
  z-index: 100; }

main > .resize {
  position: absolute;
  width: 8px;
  margin: 0 -4px;
  height: calc(100% - 40px);
  cursor: ew-resize; }

/* Fake border that doesn't take up horizontal space. */
main > .resize {
  background-image: linear-gradient(to bottom, #AA412F 50%, #AA412F 50%);
  background-size: 1px 7px;
  background-position: center top;
  background-repeat: repeat-y; }

main > .resize:hover, main > .resize.active, .resizing main > .resize.active:hover {
  background-image: linear-gradient(to bottom, #AA412F 50%, transparent 50%); }

/* Since you can overlap other borders, those shouldn't become dotted. */
.resizing main > .resize:hover {
  background-image: linear-gradient(to bottom, #AA412F 50%, #AA412F 50%); }

.workspace > .resize {
  position: static;
  height: 8px;
  margin: -4px 0;
  cursor: ns-resize; }

/* Fake border that doesn't take up vertical space. */
.workspace > .resize {
  background-image: linear-gradient(to right, #AA412F 50%, #AA412F 50%);
  background-size: 7px 1px;
  background-position: center center;
  background-repeat: repeat-x; }

.workspace > .resize:hover, .workspace > .resize.active, .resizing .workspace > .resize.active:hover {
  background-image: linear-gradient(to right, #AA412F 50%, transparent 50%); }

/* Since you can overlap other borders, those shouldn't become dotted. */
.resizing .workspace > .resize:hover {
  background-image: linear-gradient(to right, #AA412F 50%, #AA412F 50%); }

.resizing.width * {
  cursor: ew-resize; }

.resizing.height * {
  cursor: ns-resize; }

.code-editor {
  height: 100%; }

.code-editor textarea {
  width: 100%;
  height: 100%;
  resize: none;
  border: none;
  padding: none;
  background: transparent;
  font-family: 'Courier New', Courier, monospace; }

/* BASICS */
.CodeMirror {
  /* Set height, width, borders, and global font properties here */
  font-family: monospace;
  height: 300px; }

.CodeMirror-scroll {
  /* Set scrolling behaviour here */
  overflow: auto; }

/* PADDING */
.CodeMirror-lines {
  padding: 4px 0;
  /* Vertical padding around content */ }

.CodeMirror pre {
  padding: 0 4px;
  /* Horizontal padding of content */ }

.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
  background-color: white;
  /* The little square between H and V scrollbars */ }

/* GUTTER */
.CodeMirror-gutters {
  border-right: 1px solid #ddd;
  background-color: #f7f7f7;
  white-space: nowrap; }


.CodeMirror-linenumber {
  padding: 0 3px 0 5px;
  min-width: 20px;
  text-align: right;
  color: #999;
  -moz-box-sizing: content-box;
  box-sizing: content-box; }

/* CURSOR */
.CodeMirror div.CodeMirror-cursor {
  border-left: 1px solid black; }

/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
  border-left: 1px solid silver; }

.CodeMirror.cm-keymap-fat-cursor div.CodeMirror-cursor {
  width: auto;
  border: 0;
  background: #7e7; }

/* Can style cursor different in overwrite (non-insert) mode */

.cm-tab {
  display: inline-block; }

.CodeMirror-ruler {
  border-left: 1px solid #ccc;
  position: absolute; }

/* DEFAULT THEME */
.cm-s-default .cm-keyword {
  color: #708; }

.cm-s-default .cm-atom {
  color: #219; }

.cm-s-default .cm-number {
  color: #164; }

.cm-s-default .cm-def {
  color: #00f; }

.cm-s-default .cm-variable {
  color: black; }

.cm-s-default .cm-variable-2 {
  color: #05a; }

.cm-s-default .cm-variable-3 {
  color: #085; }

.cm-s-default .cm-property {
  color: black; }

.cm-s-default .cm-operator {
  color: black; }

.cm-s-default .cm-comment {
  color: #a50; }

.cm-s-default .cm-string {
  color: #a11; }

.cm-s-default .cm-string-2 {
  color: #f50; }

.cm-s-default .cm-meta {
  color: #555; }

.cm-s-default .cm-qualifier {
  color: #555; }

.cm-s-default .cm-builtin {
  color: #30a; }

.cm-s-default .cm-bracket {
  color: #997; }

.cm-s-default .cm-tag {
  color: #170; }

.cm-s-default .cm-attribute {
  color: #00c; }

.cm-s-default .cm-header {
  color: blue; }

.cm-s-default .cm-quote {
  color: #090; }

.cm-s-default .cm-hr {
  color: #999; }

.cm-s-default .cm-link {
  color: #00c; }

.cm-negative {
  color: #d44; }

.cm-positive {
  color: #292; }

.cm-header, .cm-strong {
  font-weight: bold; }

.cm-em {
  font-style: italic; }

.cm-link {
  text-decoration: underline; }

.cm-s-default .cm-error {
  color: #f00; }

.cm-invalidchar {
  color: #f00; }

div.CodeMirror span.CodeMirror-matchingbracket {
  color: #0f0; }

div.CodeMirror span.CodeMirror-nonmatchingbracket {
  color: #f22; }

.CodeMirror-activeline-background {
  background: #e8f2ff; }

/* STOP */
/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */
.CodeMirror {
  line-height: 1;
  position: relative;
  overflow: hidden;
  background: white;
  color: black; }

.CodeMirror-scroll {
  /* 30px is the magic margin used to hide the element's real scrollbars */
  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -30px;
  margin-right: -30px;
  padding-bottom: 30px;
  height: 100%;
  outline: none;
  /* Prevent dragging from highlighting the element */
  position: relative;
  -moz-box-sizing: content-box;
  box-sizing: content-box; }

.CodeMirror-sizer {
  position: relative;
  border-right: 30px solid transparent;
  -moz-box-sizing: content-box;
  box-sizing: content-box; }

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actuall scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
  position: absolute;
  z-index: 6;
  display: none; }

.CodeMirror-vscrollbar {
  right: 0;
  top: 0;
  overflow-x: hidden;
  overflow-y: scroll; }

.CodeMirror-hscrollbar {
  bottom: 0;
  left: 0;
  overflow-y: hidden;
  overflow-x: scroll; }

.CodeMirror-scrollbar-filler {
  right: 0;
  bottom: 0; }

.CodeMirror-gutter-filler {
  left: 0;
  bottom: 0; }

.CodeMirror-gutters {
  position: absolute;
  left: 0;
  top: 0;
  padding-bottom: 30px;
  z-index: 3; }

.CodeMirror-gutter {
  white-space: normal;
  height: 100%;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  padding-bottom: 30px;
  margin-bottom: -32px;
  display: inline-block;
  /* Hack to make IE7 behave */
  *zoom: 1;
  *display: inline; }

.CodeMirror-gutter-elt {
  position: absolute;
  cursor: default;
  z-index: 4; }

.CodeMirror-lines {
  cursor: text; }

.CodeMirror pre {
  /* Reset some styles that the rest of the page might have set */
  -moz-border-radius: 0;
  -webkit-border-radius: 0;
  border-radius: 0;
  border-width: 0;
  background: transparent;
  font-family: inherit;
  font-size: inherit;
  margin: 0;
  white-space: pre;
  word-wrap: normal;
  line-height: inherit;
  color: inherit;
  z-index: 2;
  position: relative;
  overflow: visible; }

.CodeMirror-wrap pre {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: normal; }

.CodeMirror-linebackground {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 0; }

.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  overflow: auto; }


.CodeMirror-wrap .CodeMirror-scroll {
  overflow-x: hidden; }

.CodeMirror-measure {
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
  visibility: hidden; }

.CodeMirror-measure pre {
  position: static; }

.CodeMirror div.CodeMirror-cursor {
  position: absolute;
  border-right: none;
  width: 0; }

div.CodeMirror-cursors {
  visibility: hidden;
  position: relative;
  z-index: 1; }

.CodeMirror-focused div.CodeMirror-cursors {
  visibility: visible; }

.CodeMirror-selected {
  background: #d9d9d9; }

.CodeMirror-focused .CodeMirror-selected {
  background: #d7d4f0; }

.cm-searching {
  background: #ffa;
  background: rgba(255, 255, 0, 0.4); }

/* IE7 hack to prevent it from returning funny offsetTops on the spans */
.CodeMirror span {
  *vertical-align: text-bottom; }

/* Used to force a border model for a node */
.cm-force-border {
  padding-right: 0.1px; }

@media print {
  /* Hide the cursor when printing */
  .CodeMirror div.CodeMirror-cursors {
    visibility: hidden; } }
